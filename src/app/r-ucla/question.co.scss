@import '../../variables.scss';

div.buttons {  // The box with the buttons.
  text-align: center;
  // Prevents the buttons from bouncing down and up while their size is being decreased by the animated `margin-right`.
  white-space: nowrap}

button {
  // Request style changes to be animated.
  transition: all 0.7s;
  // We need the buttons to have the same size, otherwise the spacing is uneven when we rotate them.
  // 110px is a bit larger than the usual 103px of the largest button.
  width: 110px}

button:nth-of-type(1), button:nth-of-type(2), button:nth-of-type(3) {
  // A bit of space between the buttons.
  margin-right: 10px}

// darken: http://sass-lang.com/documentation/Sass/Script/Functions.html#darken-instance_method
// We can also use the `brightness` filter, cf. https://stackoverflow.com/a/25942447/257568.
button:nth-of-type(1) {background-color: darken($primary-color, 15%)}
button:nth-of-type(2) {background-color: darken($primary-color, 10%)}
button:nth-of-type(3) {background-color: darken($primary-color, 5%)}

// Triggered when the screen is too narrow to display the row of horisontal buttons.
@media (max-width: 500px) {
  div.buttons {
    // Reserves some space for the sharp angles of the rotated buttons.
    margin-top: 10px}

  button {
    // Rotate the buttons to fit the narrow screen.
    transform: rotate(50deg);
    // A bit leaner than the default 36px.
    line-height: 30px}

  button:nth-of-type(1), button:nth-of-type(2), button:nth-of-type(3) {
    // Compress the space between the buttons (deduce from the button width).
    margin-right: -50px}}
